plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'umc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Hibernate
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

	// QueryDSL Dependencies
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Jackson for JSON processing
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

	// Lombok for code generation
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// OpenAPI Documentation (Spring Boot 3.x 이상 지원)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정
def generated = 'src/main/generated'

querydsl {
	jpa = true
	querydslSourcesDir = 'src/main/generated'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated']
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}